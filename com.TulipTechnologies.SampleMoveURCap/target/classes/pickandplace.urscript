
def setToOpen():
  # rg_grip(50,40)
  textmsg("Gripper Opened!")
  sleep(1.0)
end

def setToClose():
  # rg_grip(10,40)
  textmsg("Gripper closed!")
  sleep(1.0)
end

def moveToPosition(joint_position):
  movej(joint_position, a = 1.4, v = 0.80)
  sleep(1)
end

def pickAndPlace(pickPosition, placePosition):
  setToClose()
  moveToPosition(pickPosition)
  setToOpen()
  setToClose()
  moveToPosition(placePosition)
  setToOpen()
end

def pickAndPlaceMove(pickPosition, placePosition):
  movej(pickPosition, a= 1.4, v = 0.70)
  sleep(.5)
  movel(placePosition, a = 1.4, v = 0.70)
  textmsg("pick and place done movement ... ")
end

pickPosition = [0.5, -1.2, 1.8, -2.0, -1.5, 0.3]
placePosition = [-0.3, -1.1, 1.5, -1.7, 1.0, 0.8]
# pickAndPlace(pickPosition, placePosition)
# textmsg("mission Done!")

def excuteOrder(orderValue):
  if orderValue == 1:
    textmsg("ordering Esspresso ...")
  elif orderValue == 2:
    textmsg("ordering Latte ...")
  elif orderValur == 3:
    textmsg("ordering Cappucino ...")
  else:
    textmsg("Invalid order ...")
  end
  textmsg("Mission Done!")
end

def checkNewOrder():
  orderValue = modbus_get_signal_status("order_register", False)
  if orderValue != 0:
    excuteOrder(orderValue)
    modbus_set_output_signal("order_register", 0, False)
  end
end